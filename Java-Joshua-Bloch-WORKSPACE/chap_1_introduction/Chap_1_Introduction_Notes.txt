- Components
	- Components should be as small as possible but no smaller. 
	- The term component refers to any reusable software element, from an individual method to a complex framework
		consisting of multiple packages.)
	- Code should be reused rather than copied. The dependencies between components should be kept to a minimum. 
	- Errors should be detected as soon as possible after they are made, ideally at compile time.
	- Examples
		- http://joshbloch.com/effectivejava
	- The Java language supports four kinds of types: 
		1. interfaces (including annotations), 
		2. classes (including enums), 
		3. arrays, and 
		4. primitives
	- The first three are known as reference types. Class instances and arrays are objects; primitive values are not.
	- A class’s members consist of its fields, methods, member classes, and member interfaces.
	- A method’s signature consists of its name and the types of its formal parameters; the signature does not include the method’s return type.
	- API
		- The term exported API, or simply API, refers to the classes, interfaces, constructors, members, and serialized forms by which a
			programmer accesses a class, interface, or package. 
		- The term API, which is short for application programming interface, is used in preference to the otherwise preferable term interface 
			to avoid confusion with the language construct of that name. 
		- A programmer who writes a program that uses an API is referred to as a user of the API. 
		- A class whose implementation uses an API is a client of the API.
		- Classes, interfaces, constructors, members, and serialized forms are collectively known as API elements. 
		- An exported API consists of the API elements that are accessible outside of the package that defines the API. 
		- These are the API elements that any client can use and the author of the API commits to support. Not coincidentally, they are also the 
			elements for which the Javadoc utility generates documentation in its default mode of operation. 
		- Loosely speaking, the exported API of a package consists of the public and protected members and constructors of every public class or interface in the package.
		- In Java 9, a module system was added to the platform. If a library makes use of the module system, its exported API is the union of the exported 
			APIs of all the packages exported by the library’s module declaration.
		