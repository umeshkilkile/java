package com.regularexpressions;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class TestRegularExpression_Demo_5 {
	public static void main(String[] args) {
		if (args.length < 2) {
			System.out.println("Usage:\njava TestRegularExpression " + "characterSequence regularExpression+");
			System.exit(0);
		}
		System.out.println("Input: \"" + args[0] + "\"");
		for (String arg : args) {
			System.out.println("Regular expression: \"" + arg + "\"");
			Pattern p = Pattern.compile(arg);
			Matcher m = p.matcher(args[0]);
			while (m.find()) {
				System.out.println("Match \"" + m.group() + "\" at positions " + m.start() + "-" + (m.end() - 1));
			}
		}
	}
}
/*
 * NOTE:
 * 	- Pass below as command line arguments
 * 		abcabcabcdefabc abcabcabcdefabc abcabcabcdefabc
 * 
 * A Pattern object represents the compiled version of a regular expression.
 * 
 * A Matcher object is generated by calling Pattern.matcher( ) with the input
 * string as an argument. The Matcher object is then used to access the results,
 * using methods to evaluate the success or failure of different types of
 * matches:
 */
